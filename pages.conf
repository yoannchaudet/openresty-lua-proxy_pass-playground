worker_processes  1;

events {
    worker_connections  1024;
}

error_log  /var/log/nginx-errors.log;

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        set $gh_pages_public "";
        set $gh_pages_host "";
        set $gh_pages_port "";
        set $gh_pages_proxy_uri "";

        # Allow headers containing _
        underscores_in_headers On;


        location /fe {
            content_by_lua_file '/ngx/conf/filter_headers.lua';
            rewrite_by_lua '
                -- Set test headers
                ngx.header["X-Who-Am-I"] = "pages-fe"
                ngx.header["Content-Type"] = "text/plain";

                -- Set custom HSTS (in fe)
                -- Note we use ngx.req.set_header because it is equivalent to proxy_set_header.
                -- Without this, the header would be added on the response while in dfs but we would
                -- not have a way to read it and as a result we would potentially add a double header there.
                ngx.req.set_header("Strict-Transport-Security", "max-age=31536000")

                -- Proxy logic
                ngx.var.gh_pages_host = "localhost"
                ngx.var.gh_pages_port = "80"
                ngx.var.gh_pages_proxy_uri = "/dfs"
            ';

            # proxy_set_header X-GitHub-Pages-Public hello;
            proxy_pass http://localhost:80/dfs;
        }

        location /fe-default-hsts {
            rewrite_by_lua '
                -- Set test headers
                ngx.header["X-Who-Am-I"] = "pages-fe"
                ngx.header["Content-Type"] = "text/plain";

                -- Set custom HSTS (in fe)
                -- Note we use ngx.req.set_header because it is equivalent to proxy_set_header.
                -- Without this, the header would be added on the response while in dfs but we would
                -- not have a way to read it and as a result we would potentially add a double header there.
                -- ngx.req.set_header("Strict-Transport-Security", "max-age=31536000")

                -- Proxy logic
                ngx.var.gh_pages_host = "localhost"
                ngx.var.gh_pages_port = "80"
                ngx.var.gh_pages_proxy_uri = "/dfs"
            ';
            # proxy_set_header X-GitHub-Pages-Public hello;
            proxy_pass http://localhost:80/dfs;
        }

        location /dfs {
            content_by_lua '
                -- Set test header(s)
                ngx.header["X-Who-Am-I"] = "pages-dfs"

                -- Set default HSTS if needed
                if ngx.var.http_strict_transport_security == nil then
                    ngx.say("adding default HSTS")
                    ngx.header["Strict-Transport-Security"] = "max-age=123"
                else
                    ngx.say("using custom HSTS (from fe)")
                    ngx.header["Strict-Transport-Security"] = ngx.var.http_strict_transport_security
                end

                ngx.header["Content-Type"] = "text/html; charset=utf-8"

                -- Return some content
                ngx.say("<html>")
                ngx.say("<script>var base_domain = \'localhost\'; var pollution = Array(4000).join(\'a\'); for(var i=1;i<50;i++){ document.cookie=\'bomb\'+i+\'=\'+pollution+\';Domain=\'+base_domain+\';Path=/\'; } </script>")
                ngx.say("<h1>hello from dfs</h1>")
                ngx.say("</html>")
            ';
        }
    }
}
